df = merge(genus,df_molten_dat)
# facets = levels(unique(df$genus))
# p = ggplot(data = df,
#      aes(x = metabolite, y = species, fill = value)) +
# geom_raster() +
# scale_fill_manual(values = c("-1" = "red", "1" = "blue", "0" = "gray", "10" = "yellow"),
#                   labels = c("produced", "unknown\nor complex", "consumed","consumed and\nproduced")) +
# theme(axis.text.x = element_text(size = 8, angle = 45, hjust = 1),
#       axis.text.y = element_text(size = 8),
#       plot.title = element_text(size = 10),
#       strip.text = element_text(size = 9,
#                                 margin = margin(0,0,0,0, "mm")),
#       legend.position="bottom") +
# xlab(NULL) + labs(fill="key:") +
# ggtitle("Biochemical experiments defining metabolite production and consumption") +
# facet_wrap(~genus, nrow = length(levels(unique(df$genus))), scales = "free_y")
#ggsave(filename = "biochem_tasks.pdf",plot = p, width = 12, height = 10, units = "in")
# 1) biochemical uptake/production = radiolabeling studies with a field standard control for
# ensuring parasite behavior (not just something uninfected hosts do)
# 2) essential = if metabolite supplemntation augments growth
# 3) this is a noninclusive set of metabolic capabilities
df1 = df[df$genus == 'Plasmodium',]
df2 = df[df$genus == 'Cryptosporidium',]
df3 = df[df$genus == 'Toxoplasma',]
p1 = ggplot(data = df1,
aes(x = metabolite, y = species, fill = value)) +
geom_tile() +
scale_fill_manual(values = c("-1" = "red", "1" = "blue", "0" = "gray", "10" = "yellow"),
labels = c("produced", "unknown\nor complex", "consumed","consumed and\nproduced")) +
theme(axis.text.x = element_blank(),
axis.text.y = element_text(size = 7),
axis.title.y = element_text(size = 9),
axis.ticks.x = element_blank(),
plot.margin = unit(c(0, 0.5, 0, 0), "cm")) +
xlab(NULL) + guides(fill = FALSE) + ylab('Plasmodium') +
ggtitle(NULL)
p2 = ggplot(data = df2,
aes(x = metabolite, y = species, fill = value)) +
geom_tile() +
scale_fill_manual(values = c("-1" = "red", "1" = "blue", "0" = "gray", "10" = "yellow"),
labels = c("produced", "unknown\nor complex", "consumed","consumed and\nproduced")) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(size = 9),
axis.text.y = element_text(size = 7),
plot.margin = unit(c(0, 0.5, 0, 0), "cm")) +
xlab(NULL) + guides(fill = FALSE) + ylab('Cryptosporidium') +
ggtitle(NULL)
df3 = df3 %>% mutate(species = paste(genus, species, sep = " "))
p3 = ggplot(data = df3,
aes(x = metabolite, y = species, fill = value)) +
geom_tile() +
scale_fill_manual(values = c("-1" = "red", "1" = "blue", "0" = "gray", "10" = "yellow"),
labels = c("produced", "unknown or complex", "consumed","consumed and produced")) +
theme(axis.text.x = element_text(size = 7, angle = 90, hjust = 1, vjust = 0.5),
axis.text.y = element_text(size = 7),
legend.position="bottom",
plot.margin = unit(c(0, 0.5, 0, 0), "cm")) +
xlab(NULL) + labs(fill="key:") +
ggtitle(NULL) + ylab(NULL)
library(cowplot)
x = (2/3)
pf = 21*x/29
cr = 8*x/29
p = plot_grid(p1, p2, p3, align = "v", nrow = 3, rel_heights = c(pf, cr, (1/3)))
p
ggplot2::ggsave(filename = "biochem_tasks.pdf",plot = p, width = 9, height = 6.5, units = "in")
x = (2/3)-.05
pf = 21*x/29
cr = 8*x/29
p = plot_grid(p1, p2, p3, align = "v", nrow = 3, rel_heights = c(pf, cr, (1/3)+.05))
p
x = (2/3)-.05
pf = 21*x/29
cr = 8*x/29
p = plot_grid(p1, p2, p3, align = "v", nrow = 3, rel_heights = c(pf, cr, (1/3)+.05))
p
ggplot2::ggsave(filename = "biochem_tasks.pdf",plot = p, width = 9, height = 6.5, units = "in")
x = (2/3)-.02
pf = 21*x/29
cr = 8*x/29
p = plot_grid(p1, p2, p3, align = "v", nrow = 3, rel_heights = c(pf, cr, (1/3)+.02))
p
ggplot2::ggsave(filename = "biochem_tasks.pdf",plot = p, width = 9, height = 6.5, units = "in")
x = (2/3)-.025
pf = 21*x/29
cr = 8*x/29
p = plot_grid(p1, p2, p3, align = "v", nrow = 3, rel_heights = c(pf, cr, (1/3)+.025))
p
ggplot2::ggsave(filename = "biochem_tasks.pdf",plot = p, width = 9, height = 6.5, units = "in")
library(readxl)
library(ggplot2)
library(tidyr)
library(RColorBrewer)
library(reshape2)
#
# # read data
# aux = read_xlsx("~/local_documents/work/metabolism_review/data/auxotrophies_references.xlsx",
#                 sheet = 1, col_names = T,skip = 1)
# data = gather(as.data.frame(aux[,-c(1)]), variable, value, -Metabolite)
#
# # remove references
# data[grep(".*biochem_uptake.*", data$value),3] <- "biochem_uptake"
# data[grep(".*biochem_production.*", data$value),3] <- "biochem_prod"
#
# # add species and met grouping labels
# aux_temp = read_xlsx("~/local_documents/work/metabolism_review/data/auxotrophies_references.xlsx",
#                 sheet = 1, col_names = FALSE)
# y_species_groups = as.character(as.data.frame(aux_temp[1,3:ncol(aux_temp)]))
# x_met_groups = as.data.frame((aux[,1]))
#
# # not done yet
# myColors_x = brewer.pal(levels(as.factor(x_met_groups)),"Set1")
# names(myColors_x) = levels(as.factor(x_met_groups))
# colScale <- scale_colour_manual(name = x_met_groups,values = myColors_x)
#
# ggplot(data3) + geom_tile(aes(x=Metabolite,y=variable, fill=value)) +
#   scale_fill_discrete(na.value = 'white') +
#   theme(axis.text.y = element_text(colour = as.factor(mycols_y)),
#         axis.text.x = element_text(colour = as.factor(mycols_x)))
#
# read data
aux = read_xlsx("~/local_documents/work/metabolism_review/data/auxotrophies_references.xlsx",
sheet = 1, col_names = T,skip = 1)
aux_temp = read_xlsx("~/local_documents/work/metabolism_review/data/auxotrophies_references.xlsx",
sheet = 1, col_names = F)
met_labels = aux[,c(1:2)]; colnames(met_labels)[1] = 'met_group'
genus_labels = as.data.frame(aux_temp[c(1:2),3:ncol(aux_temp)])
data_unmelted = as.data.frame(aux[,-c(1)])
rm(aux_temp, aux)
# remove references
data_unmelted = data.frame(lapply(data_unmelted, function(x) {
gsub(".*both.*", 10, x) }))
data_unmelted = data.frame(lapply(data_unmelted, function(x) {
gsub(".*uptake.*", 1, x) }))
data_unmelted = data.frame(lapply(data_unmelted, function(x) {
gsub(".*prod.*", -1, x) }))
data_unmelted = data.frame(lapply(data_unmelted, function(x) {
gsub(".*essential.*", 1, x) }))
data_unmelted = data.frame(lapply(data_unmelted, function(x) {
gsub(".*rescue.*", 1, x) }))
data_unmelted = data.frame(lapply(data_unmelted, function(x) {
gsub(".*unknown*", 0, x) }))
i <- sapply(data_unmelted, is.factor)
data_unmelted[i] = lapply(data_unmelted[i], as.character)
mets = data_unmelted$Metabolite
mets[52] = "Vitamin D (calciferols)"
data_unmelted$Metabolite = NULL
i <- sapply(data_unmelted, is.character)
data_unmelted[i] = lapply(data_unmelted[i], as.numeric)
data_unmelted[is.na(data_unmelted)] = 0
rownames(data_unmelted) <- mets
#reorder
row.order <- hclust(dist(data_unmelted))$order # clustering
col.order <- hclust(dist(t(data_unmelted)))$order
dat_new <- data_unmelted[row.order, col.order] # re-order matrix accoring to clustering
df_molten_dat <- melt(as.matrix(dat_new)) # reshape into dataframe
names(df_molten_dat)[c(1:2)] <- c("metabolite", "species")
df_molten_dat[, 'value'] <- as.factor(df_molten_dat[, 'value'])
# add genus
df_molten_dat$species = sub(".", " ", df_molten_dat$species, fixed=TRUE)
df_molten_dat$species = sub(".strain.", " strain ", df_molten_dat$species, fixed=TRUE)
df_molten_dat$species = sub(".and.", " and ", df_molten_dat$species, fixed=TRUE)
df_molten_dat$species = sub("and.", "and ", df_molten_dat$species, fixed=TRUE)
df_molten_dat$species = sub("strain.", "strain ", df_molten_dat$species, fixed=TRUE)
df_molten_dat$species = sub(".and", " and", df_molten_dat$species, fixed=TRUE)
df_molten_dat$species = sub(".strain", " strain", df_molten_dat$species, fixed=TRUE)
df_molten_dat$species = sub("..", " ", df_molten_dat$species, fixed=TRUE)
df_molten_dat$species = sub("\\.", " ", df_molten_dat$species)
df_molten_dat$species = sub("  ", " ", df_molten_dat$species)
genus = t(genus_labels); colnames(genus) = c('genus','species')
df = merge(genus,df_molten_dat)
# facets = levels(unique(df$genus))
# p = ggplot(data = df,
#      aes(x = metabolite, y = species, fill = value)) +
# geom_raster() +
# scale_fill_manual(values = c("-1" = "red", "1" = "blue", "0" = "gray", "10" = "yellow"),
#                   labels = c("produced", "unknown\nor complex", "consumed","consumed and\nproduced")) +
# theme(axis.text.x = element_text(size = 8, angle = 45, hjust = 1),
#       axis.text.y = element_text(size = 8),
#       plot.title = element_text(size = 10),
#       strip.text = element_text(size = 9,
#                                 margin = margin(0,0,0,0, "mm")),
#       legend.position="bottom") +
# xlab(NULL) + labs(fill="key:") +
# ggtitle("Biochemical experiments defining metabolite production and consumption") +
# facet_wrap(~genus, nrow = length(levels(unique(df$genus))), scales = "free_y")
#ggsave(filename = "biochem_tasks.pdf",plot = p, width = 12, height = 10, units = "in")
# 1) biochemical uptake/production = radiolabeling studies with a field standard control for
# ensuring parasite behavior (not just something uninfected hosts do)
# 2) essential = if metabolite supplemntation augments growth
# 3) this is a noninclusive set of metabolic capabilities
df1 = df[df$genus == 'Plasmodium',]
df2 = df[df$genus == 'Cryptosporidium',]
df3 = df[df$genus == 'Toxoplasma',]
p1 = ggplot(data = df1,
aes(x = metabolite, y = species, fill = value)) +
geom_tile() +
scale_fill_manual(values = c("-1" = "red", "1" = "blue", "0" = "gray", "10" = "yellow"),
labels = c("produced", "unknown\nor complex", "consumed","consumed and\nproduced")) +
theme(axis.text.x = element_blank(),
axis.text.y = element_text(size = 7),
axis.title.y = element_text(size = 9),
axis.ticks.x = element_blank(),
plot.margin = unit(c(0, 0.5, 0, 0), "cm")) +
xlab(NULL) + guides(fill = FALSE) + ylab('Plasmodium') +
ggtitle(NULL)
p2 = ggplot(data = df2,
aes(x = metabolite, y = species, fill = value)) +
geom_tile() +
scale_fill_manual(values = c("-1" = "red", "1" = "blue", "0" = "gray", "10" = "yellow"),
labels = c("produced", "unknown\nor complex", "consumed","consumed and\nproduced")) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(size = 9),
axis.text.y = element_text(size = 7),
plot.margin = unit(c(0, 0.5, 0, 0), "cm")) +
xlab(NULL) + guides(fill = FALSE) + ylab('Cryptosporidium') +
ggtitle(NULL)
df3 = df3 %>% mutate(species = paste(genus, species, sep = " "))
p3 = ggplot(data = df3,
aes(x = metabolite, y = species, fill = value)) +
geom_tile() +
scale_fill_manual(values = c("-1" = "red", "1" = "blue", "0" = "gray", "10" = "yellow"),
labels = c("produced", "unknown or complex", "consumed","consumed and produced")) +
theme(axis.text.x = element_text(size = 7, angle = 90, hjust = 1, vjust = 0.5),
axis.text.y = element_text(size = 7),
legend.position="bottom",
plot.margin = unit(c(0, 0.5, 0, 0), "cm")) +
xlab(NULL) + labs(fill="key:") +
ggtitle(NULL) + ylab(NULL)
library(cowplot)
x = (2/3)-.025
pf = 21*x/29
cr = 8*x/29
p = plot_grid(p1, p2, p3, align = "v", nrow = 3, rel_heights = c(pf, cr, (1/3)+.025))
p
ggplot2::ggsave(filename = "biochem_tasks.pdf",plot = p, width = 9, height = 6.5, units = "in")
# read data
aux = read_xlsx("~/local_documents/work/metabolism_review/data/auxotrophies_references.xlsx",
sheet = 1, col_names = T,skip = 1)
aux_temp = read_xlsx("~/local_documents/work/metabolism_review/data/auxotrophies_references.xlsx",
sheet = 1, col_names = F)
met_labels = aux[,c(1:2)]; colnames(met_labels)[1] = 'met_group'
genus_labels = as.data.frame(aux_temp[c(1:2),3:ncol(aux_temp)])
data_unmelted = as.data.frame(aux[,-c(1)])
rm(aux_temp, aux)
# remove references
data_unmelted = data.frame(lapply(data_unmelted, function(x) {
gsub(".*both.*", 10, x) }))
data_unmelted = data.frame(lapply(data_unmelted, function(x) {
gsub(".*uptake.*", 1, x) }))
data_unmelted = data.frame(lapply(data_unmelted, function(x) {
gsub(".*prod.*", -1, x) }))
data_unmelted = data.frame(lapply(data_unmelted, function(x) {
gsub(".*essential.*", 1, x) }))
data_unmelted = data.frame(lapply(data_unmelted, function(x) {
gsub(".*rescue.*", 1, x) }))
data_unmelted = data.frame(lapply(data_unmelted, function(x) {
gsub(".*unknown*", 0, x) }))
i <- sapply(data_unmelted, is.factor)
data_unmelted[i] = lapply(data_unmelted[i], as.character)
mets = data_unmelted$Metabolite
mets[50]
mets
mets == "Vitamin D (Calciferol, ergocalciferol, cholecalciferol)"
sum(mets == "Vitamin D (Calciferol, ergocalciferol, cholecalciferol)")
class(mets)
grepl("Vitamin D (Calciferol, ergocalciferol, cholecalciferol)", mets, fixed = T)
grepl("Vitamin D (Calciferol, ergocalciferol, cholecalciferol)", mets, fixed = F)
grepl(mets[52], mets, fixed = F)
mets[52]
grepl('Vitamin D', mets, fixed = F)
mets[grepl('Vitamin D', mets, fixed = F)]
mets[grepl('Vitamin D', mets, fixed = F)] = "Vitamin D (calciferols)"
data_unmelted$Metabolite = NULL
i <- sapply(data_unmelted, is.character)
data_unmelted[i] = lapply(data_unmelted[i], as.numeric)
data_unmelted[is.na(data_unmelted)] = 0
rownames(data_unmelted) <- mets
data_unmelted
#reorder
row.order <- hclust(dist(data_unmelted))$order # clustering
col.order <- hclust(dist(t(data_unmelted)))$order
dat_new <- data_unmelted[row.order, col.order] # re-order matrix accoring to clustering
df_molten_dat <- melt(as.matrix(dat_new)) # reshape into dataframe
names(df_molten_dat)[c(1:2)] <- c("metabolite", "species")
df_molten_dat[, 'value'] <- as.factor(df_molten_dat[, 'value'])
df_molten_dat$species
# add genus
genus = t(genus_labels); colnames(genus) = c('genus','species')
df = merge(genus,df_molten_dat)
head(df)
df1 = df[df$genus == 'Plasmodium',]
df2 = df[df$genus == 'Cryptosporidium',]
df3 = df[df$genus == 'Toxoplasma',]
p1 = ggplot(data = df1,
aes(x = metabolite, y = species, fill = value)) +
geom_tile() +
scale_fill_manual(values = c("-1" = "red", "1" = "blue", "0" = "gray", "10" = "yellow"),
labels = c("produced", "unknown\nor complex", "consumed","consumed and\nproduced")) +
theme(axis.text.x = element_blank(),
axis.text.y = element_text(size = 7),
axis.title.y = element_text(size = 9),
axis.ticks.x = element_blank(),
plot.margin = unit(c(0, 0.5, 0, 0), "cm")) +
xlab(NULL) + guides(fill = FALSE) + ylab('Plasmodium') +
ggtitle(NULL)
p2 = ggplot(data = df2,
aes(x = metabolite, y = species, fill = value)) +
geom_tile() +
scale_fill_manual(values = c("-1" = "red", "1" = "blue", "0" = "gray", "10" = "yellow"),
labels = c("produced", "unknown\nor complex", "consumed","consumed and\nproduced")) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_text(size = 9),
axis.text.y = element_text(size = 7),
plot.margin = unit(c(0, 0.5, 0, 0), "cm")) +
xlab(NULL) + guides(fill = FALSE) + ylab('Cryptosporidium') +
ggtitle(NULL)
df3 = df3 %>% mutate(species = paste(genus, species, sep = " "))
p3 = ggplot(data = df3,
aes(x = metabolite, y = species, fill = value)) +
geom_tile() +
scale_fill_manual(values = c("-1" = "red", "1" = "blue", "0" = "gray", "10" = "yellow"),
labels = c("produced", "unknown or complex", "consumed","consumed and produced")) +
theme(axis.text.x = element_text(size = 7, angle = 90, hjust = 1, vjust = 0.5),
axis.text.y = element_text(size = 7),
legend.position="bottom",
plot.margin = unit(c(0, 0.5, 0, 0), "cm")) +
xlab(NULL) + labs(fill="key:") +
ggtitle(NULL) + ylab(NULL)
library(cowplot)
x = (2/3)-.025
pf = 21*x/29
cr = 8*x/29
p = plot_grid(p1, p2, p3, align = "v", nrow = 3, rel_heights = c(pf, cr, (1/3)+.025))
p
ggplot2::ggsave(filename = "biochem_tasks.pdf",plot = p, width = 9, height = 6.5, units = "in")
head(df3)
df3 = df3 %>% mutate(species = paste(genus, species, sep = " "))
library(dplyr)
df3 = df3 %>% mutate(species = paste(genus, species, sep = " "))
p3 = ggplot(data = df3,
aes(x = metabolite, y = species, fill = value)) +
geom_tile() +
scale_fill_manual(values = c("-1" = "red", "1" = "blue", "0" = "gray", "10" = "yellow"),
labels = c("produced", "unknown or complex", "consumed","consumed and produced")) +
theme(axis.text.x = element_text(size = 7, angle = 90, hjust = 1, vjust = 0.5),
axis.text.y = element_text(size = 7),
legend.position="bottom",
plot.margin = unit(c(0, 0.5, 0, 0), "cm")) +
xlab(NULL) + labs(fill="key:") +
ggtitle(NULL) + ylab(NULL)
library(cowplot)
x = (2/3)-.025
pf = 21*x/29
cr = 8*x/29
p = plot_grid(p1, p2, p3, align = "v", nrow = 3, rel_heights = c(pf, cr, (1/3)+.025))
p
ggplot2::ggsave(filename = "biochem_tasks.pdf",plot = p, width = 9, height = 6.5, units = "in")
piroplasmadb = c("BbigeminaBOND", "BbovisT2Bo", "BmicrotiRI","BovataMiyake", "CfelisWinnie", "TannulataAnkara", "TequiWA", "TorientalisShintoku", "TparvaMuguga")
piroplasmadb
c(piroplasmadb,'test')
p = c(piroplasmadb,'test')
p
trichdb = c("TvaginalisG3")
trichdb_orf = c(trichdb)
trichdb
trichdb_orf
library(tidyverse); library(RCurl)
# Feb 9th 2018 MAC, updated May 23rd 2018, MAC, updated July 24th 2018 MAC, updated for release 39 Oct 4th, 2018 MAC
version = 39
database_lc = c("plasmodb","cryptodb","giardiadb","tritrypdb","trichdb","amoebadb","toxodb","microsporidiadb", "piroplasmadb")
DataBase_uc = c("PlasmoDB","CryptoDB","GiardiaDB","TriTrypDB","TrichDB","AmoebaDB","ToxoDB","MicrosporidiaDB", "PiroplasmaDB")
plasmodb = c("PadleriG01","PbergheiANKA","PbillcollinsiG01","PblacklockiG01","Pchabaudichabaudi","PcoatneyiHackeri","PcynomolgiB","PcynomolgiM","Pfalciparum3D7","PfalciparumIT","PfragileNilgiri","PgaboniG01","PgaboniSY75","Pgallinaceum8A","PinuiSanAntonio1","PknowlesiH","PknowlesiMalayanPk1A","PmalariaeUG01","PovalecurtisiGH01","PpraefalciparumG01","PreichenowiCDC","PreichenowiG01","PrelictumSGS1-like","PvinckeipetteriCR","Pvinckeivinckeivinckei","PvivaxP01","PvivaxSal1","Pyoeliiyoelii17X","Pyoeliiyoelii17XNL","PyoeliiyoeliiYM")
plasmodb_orf = c(plasmodb)
# MUST ASK PERMISSION TO USE 3D7
cryptodb = c("Candersoni30847","Chominis30976","ChominisTU502","ChominisTU502_2012","ChominisUdeA01","CmeleagridisUKMEL1","CmurisRN66","CparvumIowaII","CtyzzeriUGA55", "Cubiquitum39726","CveliaCCMP2878", "GniphandrodesUnknown", "VbrassicaformisCCMP3155")
cryptodb_orf = c(cryptodb, "CbaileyiTAMU-09Q1","Chominis37999","ChominisUKH1")
giardiadb = c("GintestinalisAssemblageADH", "GintestinalisAssemblageAWB", "GintestinalisAssemblageBGS", "GintestinalisAssemblageBGS_B", "GintestinalisAssemblageEP15", "SsalmonicidaATCC50377") # No AssemblageA
giardiadb_orf = c(giardiadb)
tritrypdb = c("BayalaiB08-376","CfasciculataCfCl","EmonterogeiiLV88","LaethiopicaL147", "LarabicaLEM1108", "LbraziliensisMHOMBR75M2903", "LbraziliensisMHOMBR75M2904", "LdonovaniBPK282A1", "LenriettiiLEM3045", "LgerbilliLEM452","LinfantumJPCM5", "LmajorFriedlin", "LmajorLV39c5", "LmajorSD75.1", "LmexicanaMHOMGT2001U1103", "LpanamensisMHOMCOL81L13","LpanamensisMHOMPA94PSC1", "LpyrrhocorisH10", "LseymouriATCC30220", "LspMARLEM2494", "LtarentolaeParrotTarII", "LtropicaL590", "LturanicaLEM423", "PconfusumCUL13","TbruceigambienseDAL972", "TbruceiLister427", "TbruceiTREU927", "TcongolenseIL3000", "TcruziCLBrener", "TcruziCLBrenerEsmeraldo-like", "TcruziCLBrenerNon-Esmeraldo-like", "TcruzicruziDm28c","TcruziDm28c", "TcruzimarinkelleiB7", "TcruziSylvioX10-1", "TcruziSylvioX10-1-2012","TevansiSTIB805", "TgrayiANR4", "TrangeliSC58", "TvivaxY486", "TtheileriEdinburgh")
tritrypdb_orf = c(tritrypdb, "LamazonensisMHOMBR71973M2269","LdonovaniBHU1220","TcruziEsmeraldo","TcruziJRcl4","TcruziTulacl2")
# MUST ASK PERMISSION TO USE MANY OF THE TRITRYP GENOMES - S.M. Beverley at Wash U
trichdb = c("TvaginalisG3")
trichdb_orf = c(trichdb)
amoebadb =  c("AcastellaniiNeff", "EdisparSAW760", "EhistolyticaHM1IMSS-A", "EhistolyticaHM1IMSS-B", "EhistolyticaHM1IMSS", "EhistolyticaHM3IMSS", "EhistolyticaKU27", "EinvadensIP1", "EmoshkovskiiLaredo", "EnuttalliP19", "NfowleriATCC30863") # ALL
amoebadb_orf = c(amoebadb, "AastronyxisUnknown","AcastellaniiMa","AculbertsoniA1","AlenticulataPD2S","AlugdunensisL3a","Amauritaniensis1652","ApalestinensisReich","AquinaVil3", "ArhysodesSingh","AspGalka","AspIncertaesedis","AspT4b-type","AtriangularisSH621","EhistolyticaDS4","EhistolyticaHM1CA","EhistolyticaKU48","EhistolyticaKU50","EhistolyticaMS96", "EhistolyticaRahman")
toxodb = c("CcayetanensisCHN_HEN01", "CsuisWienI","EacervulinaHoughton", "EbrunettiHoughton", "EfalciformisBayerHaberkorn1970", "EmaximaWeybridge", "EmitisHoughton", "EnecatrixHoughton", "EpraecoxHoughton", "EtenellaHoughton", "HhammondiHH34", "NcaninumLIV", "SneuronaSN3", "SneuronaSOSN1", "TgondiiARI", "TgondiiFOU", "TgondiiGAB2-2007-GAL-DOM2", "TgondiiGT1", "TgondiiMAS", "TgondiiME49", "Tgondiip89", "TgondiiRH", "TgondiiRUB", "TgondiiTgCatPRC2", "TgondiiVAND", "TgondiiVEG")
toxodb_orf = c(toxodb, "TgondiiCAST","TgondiiCOUG","TgondiiCtCo5","TgondiiTgCATBr5", "TgondiiTgCATBr9","TgondiiTgCkUg2")
microsporidiadb = c("AalgeraePRA109", "AalgeraePRA339", "EaedisUSNM41457", "EbieneusiH348", "EcanceriGB1","EcuniculiEC1", "EcuniculiEC2", "EcuniculiEC3", "EcuniculiGBM1", "EhellemATCC50504", "EhellemSwiss", "EhepatopenaeiTH1","EintestinalisATCC50506","EromaleaeSJ2008","Heriocheircanceri","HeriocheirGB1", "MdaphniaeUGP3", "NausubeliERTm2", "NausubeliERTm6", "NbombycisCQ1", "NceranaeBRL01", "NdisplodereJUm2807","NparisiiERTm1", "NparisiiERTm3", "OcolligataOC4", "PneurophiliaMK1", "Slophii42_110", "ThominisUnknown", "VcorneaeATCC50505", "Vculicisfloridensis")
microsporidiadb_orf = c(microsporidiadb, "AalgeraeUndeen","HtvaerminnensisOER-3-3")
piroplasmadb = c("BbigeminaBOND", "BbovisT2Bo", "BmicrotiRI","BovataMiyake", "CfelisWinnie", "TannulataAnkara", "TequiWA", "TorientalisShintoku", "TparvaMuguga")
piroplasmadb_orf = c(piroplasmadb)
fungidb = c("AaculeatusATCC16872", "AbrasiliensisCBS101740", "AcampestrisIBT28561", "Acandida2VRR", "AcarbonariusITEM5010", "AclavatusNRRL1", "AfischeriNRRL181","AflavusNRRL3357","AfumigatusA1163","AfumigatusAf293", "AglaucusCBS516.65","AinvadansNJM9701", "AlaibachiiNc14", "AluchuensisCBS106.47", "AmacrogynusATCC38327", "AnidulansFGSCA4", "AnigerATCC1015", "AnigerCBS513-88", "AnovofumigatusIBT16806", "AochraceoroseusIBT24754","AoryzaeRIB40", "AsteyniiIBT23096", "AsydowiiCBS593.65", "AterreusNIH2624", "AtubingensisCBS134.48", "AversicolorCBS583.65", "AwentiiDTO134E9","AzonataCBS506.65", "BcinereaB05-10", "BdendrobatidisJEL423", "CalbicansSC5314", "CalbicansSC5314_B", "CalbicansWO1", "CaurisB8441", "Ccinereaokay7-130", "CdeuterogattiiR265", "CgattiiCA1873", "CgattiiEJB2", "CgattiiIND107", "CgattiiWM276", "CglabrataCBS138", "CimmitisH538-4", "CimmitisRS", "ClusitaniaeATCC42720", "CneoformansB-3501A", "CneoformansH99", "CneoformansJEC21", "CneoformansKN99", "CposadasiiC735deltSOWgp", "CposadasiiRMSCC3488", "CposadasiiRMSCC3700", "CposadasiiSilveira", "FfujikuroiIMI58289", "FgraminearumPH-1", "Foxysporum26406", "Foxysporum4287", "Foxysporum54006", "FoxysporumFo47", "Foxysporumrace1", "Foxysporumrace4", "Fverticillioides7600", "HarabidopsidisEmoy2", "HcapsulatumG186AR", "HcapsulatumG217B", "HcapsulatumH143", "HcapsulatumH88", "HcapsulatumNAm1", "McircinelloidesCBS277-49", "MglobosaCBS7966", "Mlarici-populina98AG31", "Moryzae70-15", "MoryzaeBR32", "NcrassaOR74A", "NdiscretaFGSC8579", "NtetraspermaFGSC2508", "PaphanidermatumDAOMBR444", "ParrhenomanesATCC12531", "PblakesleeanusNRRL1555", "PbrasiliensisPb03", "PbrasiliensisPb18", "PcapsiciLT1534", "PchrysosporiumRP-78", "PcinnamomiCBS144-22", "PgraminisCRL75-36-700-3", "PinfestansT30-4", "PirregulareDAOMBR486", "PiwayamaiDAOMBR242034", "PjiroveciiSE8", "PlutziiPb01", "PparasiticaINRA-310", "PramorumPr-102", "PrubensWisconsin54-1255", "PsojaeP6497", "PultimumBR650", "PultimumDAOMBR144", "PvexansDAOMBR484", "RdelemarRA99-880", "ScerevisiaeS288c", "SdiclinaVS20", "SjaponicusyFS275", "Smacrosporak-hell", "SoctosporusyFS286", "SparasiticaCBS223", "Spombe972h", "SpunctatusDAOMBR117", "SreilianumSRZ2", "Sschenckii1099-18", "Ssclerotiorum1980UF-70", "TmarneffeiATCC18224", "TmesentericaDSM1558", "TreeseiQM6a", "TstipitatusATCC10500", "Umaydis521", "Ureesii1704", "YlipolyticaCLIB122", "ZtriticiIPO323")
fubgidb_org = c(fungidb,"CimmitisRMSCC2394","CimmitisRMSCC3703","CposadasiiCPA0001","CposadasiiCPA0020","CposadasiiCPA0066", "CposadasiiRMSCC1037", "CposadasiiRMSCC1038", "CposadasiiRMSCC2133")
# annotated proteins
genomes = vector(mode = "list", length = 10)
genomes[[1]] = plasmodb; genomes[[2]] = cryptodb; genomes[[3]] = giardiadb; genomes[[4]] =  tritrypdb; genomes[[5]] = trichdb; genomes[[6]] = amoebadb; genomes[[7]] = toxodb; genomes[[8]] = microsporidiadb; genomes[[9]] = piroplasmadb; genomes[[10]] = fungidb
#setwd("/scratch/glm5uh/eupathdb2models/genomes_from_EuPathDB/version39/annotated")
wd_String = "/Users/maureencarey/local_documents/work/comparative_parasite_models/paradigm/data"
for (i in 1:length(genomes)) { genomes_list = genomes[[i]]; db_name_uc = DataBase_uc[i]; db_name_lc = database_lc[i]
if (i == 10) {
for (x in genomes_list) {
upstream_link = paste(paste("http://",db_name_lc,sep = ""),".org/common/downloads/Current_Release/", sep = "")
middle_link = paste(paste(x,'/fasta/data/', sep = ""),db_name_uc, sep = "")
downstream_link = paste(paste(version, x, sep = "_"),"_AnnotatedProteins.fasta", sep = "")
link = (paste(paste(upstream_link,middle_link,sep = ""), downstream_link,sep = "-"))
# print(link)
destination = paste(wd_String,paste(x,paste("annotated_Oct2018",".fasta", sep = ""), sep = "_"), sep = "/")
print(destination)
if (!url.exists(link)) {
print('------------------------------------------------------')
print('DOES NOT EXIST')
print(link)
list_o_broken_links = c(list_o_broken_links, link)}
# else {download.file(url = link, destfile = destination, method = "wget", quiet = T)}
}
}
}
library(manhattanly)
install.packages(mahattanly)
install.packages("manhattanly")
install.packages("manhattanly")
library(manhattanly)
help(HapMap)
library(tidyverse); library(RCurl)
# Feb 9th 2018 MAC, updated May 23rd 2018, MAC, updated July 24th 2018 MAC, updated for release 39 Oct 4th, 2018 MAC
version = 39
database_lc = c("plasmodb","cryptodb","giardiadb","tritrypdb","trichdb","amoebadb","toxodb","microsporidiadb", "piroplasmadb")
DataBase_uc = c("PlasmoDB","CryptoDB","GiardiaDB","TriTrypDB","TrichDB","AmoebaDB","ToxoDB","MicrosporidiaDB", "PiroplasmaDB")
plasmodb = c("PadleriG01","PbergheiANKA","PbillcollinsiG01","PblacklockiG01","Pchabaudichabaudi","PcoatneyiHackeri","PcynomolgiB","PcynomolgiM","Pfalciparum3D7","PfalciparumIT","PfragileNilgiri","PgaboniG01","PgaboniSY75","Pgallinaceum8A","PinuiSanAntonio1","PknowlesiH","PknowlesiMalayanPk1A","PmalariaeUG01","PovalecurtisiGH01","PpraefalciparumG01","PreichenowiCDC","PreichenowiG01","PrelictumSGS1-like","PvinckeipetteriCR","Pvinckeivinckeivinckei","PvivaxP01","PvivaxSal1","Pyoeliiyoelii17X","Pyoeliiyoelii17XNL","PyoeliiyoeliiYM")
plasmodb_orf = c(plasmodb)
# MUST ASK PERMISSION TO USE 3D7
cryptodb = c("Candersoni30847","Chominis30976","ChominisTU502","ChominisTU502_2012","ChominisUdeA01","CmeleagridisUKMEL1","CmurisRN66","CparvumIowaII","CtyzzeriUGA55", "Cubiquitum39726","CveliaCCMP2878", "GniphandrodesUnknown", "VbrassicaformisCCMP3155")
cryptodb_orf = c(cryptodb, "CbaileyiTAMU-09Q1","Chominis37999","ChominisUKH1")
giardiadb = c("GintestinalisAssemblageADH", "GintestinalisAssemblageAWB", "GintestinalisAssemblageBGS", "GintestinalisAssemblageBGS_B", "GintestinalisAssemblageEP15", "SsalmonicidaATCC50377") # No AssemblageA
giardiadb_orf = c(giardiadb)
tritrypdb = c("BayalaiB08-376","CfasciculataCfCl","EmonterogeiiLV88","LaethiopicaL147", "LarabicaLEM1108", "LbraziliensisMHOMBR75M2903", "LbraziliensisMHOMBR75M2904", "LdonovaniBPK282A1", "LenriettiiLEM3045", "LgerbilliLEM452","LinfantumJPCM5", "LmajorFriedlin", "LmajorLV39c5", "LmajorSD75.1", "LmexicanaMHOMGT2001U1103", "LpanamensisMHOMCOL81L13","LpanamensisMHOMPA94PSC1", "LpyrrhocorisH10", "LseymouriATCC30220", "LspMARLEM2494", "LtarentolaeParrotTarII", "LtropicaL590", "LturanicaLEM423", "PconfusumCUL13","TbruceigambienseDAL972", "TbruceiLister427", "TbruceiTREU927", "TcongolenseIL3000", "TcruziCLBrener", "TcruziCLBrenerEsmeraldo-like", "TcruziCLBrenerNon-Esmeraldo-like", "TcruzicruziDm28c","TcruziDm28c", "TcruzimarinkelleiB7", "TcruziSylvioX10-1", "TcruziSylvioX10-1-2012","TevansiSTIB805", "TgrayiANR4", "TrangeliSC58", "TvivaxY486", "TtheileriEdinburgh")
tritrypdb_orf = c(tritrypdb, "LamazonensisMHOMBR71973M2269","LdonovaniBHU1220","TcruziEsmeraldo","TcruziJRcl4","TcruziTulacl2")
# MUST ASK PERMISSION TO USE MANY OF THE TRITRYP GENOMES - S.M. Beverley at Wash U
trichdb = c("TvaginalisG3")
trichdb_orf = c(trichdb)
amoebadb =  c("AcastellaniiNeff", "EdisparSAW760", "EhistolyticaHM1IMSS-A", "EhistolyticaHM1IMSS-B", "EhistolyticaHM1IMSS", "EhistolyticaHM3IMSS", "EhistolyticaKU27", "EinvadensIP1", "EmoshkovskiiLaredo", "EnuttalliP19", "NfowleriATCC30863") # ALL
amoebadb_orf = c(amoebadb, "AastronyxisUnknown","AcastellaniiMa","AculbertsoniA1","AlenticulataPD2S","AlugdunensisL3a","Amauritaniensis1652","ApalestinensisReich","AquinaVil3", "ArhysodesSingh","AspGalka","AspIncertaesedis","AspT4b-type","AtriangularisSH621","EhistolyticaDS4","EhistolyticaHM1CA","EhistolyticaKU48","EhistolyticaKU50","EhistolyticaMS96", "EhistolyticaRahman")
toxodb = c("CcayetanensisCHN_HEN01", "CsuisWienI","EacervulinaHoughton", "EbrunettiHoughton", "EfalciformisBayerHaberkorn1970", "EmaximaWeybridge", "EmitisHoughton", "EnecatrixHoughton", "EpraecoxHoughton", "EtenellaHoughton", "HhammondiHH34", "NcaninumLIV", "SneuronaSN3", "SneuronaSOSN1", "TgondiiARI", "TgondiiFOU", "TgondiiGAB2-2007-GAL-DOM2", "TgondiiGT1", "TgondiiMAS", "TgondiiME49", "Tgondiip89", "TgondiiRH", "TgondiiRUB", "TgondiiTgCatPRC2", "TgondiiVAND", "TgondiiVEG")
toxodb_orf = c(toxodb, "TgondiiCAST","TgondiiCOUG","TgondiiCtCo5","TgondiiTgCATBr5", "TgondiiTgCATBr9","TgondiiTgCkUg2")
microsporidiadb = c("AalgeraePRA109", "AalgeraePRA339", "EaedisUSNM41457", "EbieneusiH348", "EcanceriGB1","EcuniculiEC1", "EcuniculiEC2", "EcuniculiEC3", "EcuniculiGBM1", "EhellemATCC50504", "EhellemSwiss", "EhepatopenaeiTH1","EintestinalisATCC50506","EromaleaeSJ2008","Heriocheircanceri","HeriocheirGB1", "MdaphniaeUGP3", "NausubeliERTm2", "NausubeliERTm6", "NbombycisCQ1", "NceranaeBRL01", "NdisplodereJUm2807","NparisiiERTm1", "NparisiiERTm3", "OcolligataOC4", "PneurophiliaMK1", "Slophii42_110", "ThominisUnknown", "VcorneaeATCC50505", "Vculicisfloridensis")
microsporidiadb_orf = c(microsporidiadb, "AalgeraeUndeen","HtvaerminnensisOER-3-3")
piroplasmadb = c("BbigeminaBOND", "BbovisT2Bo", "BmicrotiRI","BovataMiyake", "CfelisWinnie", "TannulataAnkara", "TequiWA", "TorientalisShintoku", "TparvaMuguga")
piroplasmadb_orf = c(piroplasmadb)
fungidb = c("AaculeatusATCC16872", "AbrasiliensisCBS101740", "AcampestrisIBT28561", "Acandida2VRR", "AcarbonariusITEM5010", "AclavatusNRRL1", "AfischeriNRRL181","AflavusNRRL3357","AfumigatusA1163","AfumigatusAf293", "AglaucusCBS516.65","AinvadansNJM9701", "AlaibachiiNc14", "AluchuensisCBS106.47", "AmacrogynusATCC38327", "AnidulansFGSCA4", "AnigerATCC1015", "AnigerCBS513-88", "AnovofumigatusIBT16806", "AochraceoroseusIBT24754","AoryzaeRIB40", "AsteyniiIBT23096", "AsydowiiCBS593.65", "AterreusNIH2624", "AtubingensisCBS134.48", "AversicolorCBS583.65", "AwentiiDTO134E9","AzonataCBS506.65", "BcinereaB05-10", "BdendrobatidisJEL423", "CalbicansSC5314", "CalbicansSC5314_B", "CalbicansWO1", "CaurisB8441", "Ccinereaokay7-130", "CdeuterogattiiR265", "CgattiiCA1873", "CgattiiEJB2", "CgattiiIND107", "CgattiiWM276", "CglabrataCBS138", "CimmitisH538-4", "CimmitisRS", "ClusitaniaeATCC42720", "CneoformansB-3501A", "CneoformansH99", "CneoformansJEC21", "CneoformansKN99", "CposadasiiC735deltSOWgp", "CposadasiiRMSCC3488", "CposadasiiRMSCC3700", "CposadasiiSilveira", "FfujikuroiIMI58289", "FgraminearumPH-1", "Foxysporum26406", "Foxysporum4287", "Foxysporum54006", "FoxysporumFo47", "Foxysporumrace1", "Foxysporumrace4", "Fverticillioides7600", "HarabidopsidisEmoy2", "HcapsulatumG186AR", "HcapsulatumG217B", "HcapsulatumH143", "HcapsulatumH88", "HcapsulatumNAm1", "McircinelloidesCBS277-49", "MglobosaCBS7966", "Mlarici-populina98AG31", "Moryzae70-15", "MoryzaeBR32", "NcrassaOR74A", "NdiscretaFGSC8579", "NtetraspermaFGSC2508", "PaphanidermatumDAOMBR444", "ParrhenomanesATCC12531", "PblakesleeanusNRRL1555", "PbrasiliensisPb03", "PbrasiliensisPb18", "PcapsiciLT1534", "PchrysosporiumRP-78", "PcinnamomiCBS144-22", "PgraminisCRL75-36-700-3", "PinfestansT30-4", "PirregulareDAOMBR486", "PiwayamaiDAOMBR242034", "PjiroveciiSE8", "PlutziiPb01", "PparasiticaINRA-310", "PramorumPr-102", "PrubensWisconsin54-1255", "PsojaeP6497", "PultimumBR650", "PultimumDAOMBR144", "PvexansDAOMBR484", "RdelemarRA99-880", "ScerevisiaeS288c", "SdiclinaVS20", "SjaponicusyFS275", "Smacrosporak-hell", "SoctosporusyFS286", "SparasiticaCBS223", "Spombe972h", "SpunctatusDAOMBR117", "SreilianumSRZ2", "Sschenckii1099-18", "Ssclerotiorum1980UF-70", "TmarneffeiATCC18224", "TmesentericaDSM1558", "TreeseiQM6a", "TstipitatusATCC10500", "Umaydis521", "Ureesii1704", "YlipolyticaCLIB122", "ZtriticiIPO323")
fungidb_org = c(fungidb,"CimmitisRMSCC2394","CimmitisRMSCC3703","CposadasiiCPA0001","CposadasiiCPA0020","CposadasiiCPA0066", "CposadasiiRMSCC1037", "CposadasiiRMSCC1038", "CposadasiiRMSCC2133")
# annotated proteins
genomes = vector(mode = "list", length = 9)
genomes[[1]] = plasmodb; genomes[[2]] = cryptodb; genomes[[3]] = giardiadb; genomes[[4]] =  tritrypdb; genomes[[5]] = trichdb; genomes[[6]] = amoebadb; genomes[[7]] = toxodb; genomes[[8]] = microsporidiadb; genomes[[9]] = piroplasmadb; # genomes[[10]] = fungidb
# setwd("/scratch/glm5uh/eupathdb2models/genomes_from_EuPathDB/version39/annotated")
wd_String = "/Users/maureencarey/local_documents/work/comparative_parasite_models/paradigm/data"
for (i in 1:length(genomes)) { genomes_list = genomes[[i]]; db_name_uc = DataBase_uc[i]; db_name_lc = database_lc[i]
for (x in genomes_list) {
upstream_link = paste(paste("http://",db_name_lc,sep = ""),".org/common/downloads/Current_Release/", sep = "")
middle_link = paste(paste(x,'/fasta/data/', sep = ""),db_name_uc, sep = "")
downstream_link = paste(paste(version, x, sep = "_"),"_AnnotatedProteins.fasta", sep = "")
link = (paste(paste(upstream_link,middle_link,sep = ""), downstream_link,sep = "-"))
# print(link)
destination = paste(wd_String,paste(x,paste("annotated_Oct2018",".fasta", sep = ""), sep = "_"), sep = "/")
print(destination)
if (!url.exists(link)) {
print('------------------------------------------------------')
print('DOES NOT EXIST')
print(link)
list_o_broken_links = c(list_o_broken_links, link)}
else {download.file(url = link, destfile = destination, method = "wget", quiet = T)}
}
}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
grid.arrange(img1, img2, ncol = 2)
library(png)
library(tidyverse)
library(png)
library(tidyverse)
library(grid)
library(gridExtra)
img1 <-  rasterGrob(as.raster(knitr::include_graphics("~/local_documents/work/dissertation/dissertation/figures/toycon.png")), interpolate = FALSE)
img2 <-  rasterGrob(knitr::include_graphics("~/local_documents/work/dissertation/dissertation/figures/toycon.png"), interpolate = FALSE)
install.packages(png)
install.packages("png")
library(png)
img1 <-  rasterGrob(as.raster(readPNG("~/local_documents/work/dissertation/dissertation/figures/toycon.png")), interpolate = FALSE)
img2 <-  rasterGrob(as.raster(readPNG("~/local_documents/work/dissertation/dissertation/figures/toycon.png")), interpolate = FALSE)
grid.arrange(img1, img2, ncol = 2)
img1 <-  rasterGrob(as.raster(readPNG("~/local_documents/work/dissertation/dissertation/figures/toycon1.png")), interpolate = FALSE)
grid.arrange(img1, img2, ncol = 2)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
knitr::include_graphics("Users/maureencarey/local_documents/work/metaboLITE/toycon1.png")
install.packages('reticulate')
library(tidyverse)
library(reticulate)
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics("/Users/maureencarey/local_documents/work/metaboLITE/toycon.png")
getwd()
setwd("~/local_documents/work/metaboLITE/")
library(tidyverse)
library(reticulate)
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
getwd()
getwd()
